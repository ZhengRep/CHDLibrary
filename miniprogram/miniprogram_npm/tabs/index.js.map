{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["! function(name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define == 'function') define(definition);\n  else this[name] = definition();\n}('tabs', function() {\n\n  return function tabs(container) {\n    var tabs = container.querySelectorAll('.tab');\n    var panes = container.querySelectorAll('.tab-pane');\n\n    each(tabs, function(i, tab) {\n      tab.addEventListener('click', function(e) {\n        activate(tabs, i);\n        activate(panes, i);\n      });\n    })\n\n    function activate(tabs, index) {\n      each(tabs, function(i, tab) {\n        if (i != index) {\n          removeClass(tab, 'active')\n        } else {\n          addClass(tab, 'active')\n        }\n      });\n    }\n  }\n\n  function each(elements, fn) {\n    for (var i = elements.length - 1; i >= 0; i--) {\n      fn(i, elements[i]);\n    }\n  }\n\n  function hasClass(el, cls) {\n    return el.className.match(new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)'));\n  }\n\n  function addClass(el, cls) {\n    if (!hasClass(el, cls)) {\n      el.className += \" \" + cls;\n    }\n  }\n\n  function removeClass(el, cls) {\n    if (hasClass(el, cls)) {\n      var reg = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)');\n      el.className = el.className.replace(reg, '');\n    }\n  }\n});"]}